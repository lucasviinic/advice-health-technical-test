"""Create owners and cars tables

Revision ID: ea0e664c46ef
Revises: 
Create Date: 2024-09-22 14:45:15.023859

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ea0e664c46ef'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cars')
    op.drop_table('owners')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('owners',
        sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
        sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column('cpf', sa.VARCHAR(length=14), autoincrement=False, nullable=True),
        sa.Column('sales_opportunity', sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
        sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='owners_pkey'),
        sa.UniqueConstraint('cpf', name='owners_cpf_key'),
        postgresql_ignore_search_path=False
    )
    op.create_table('cars',
        sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
        sa.Column('color', postgresql.ENUM('yellow', 'blue', 'gray', name='car_color'), autoincrement=False, nullable=False),
        sa.Column('model', postgresql.ENUM('hatch', 'sedan', 'convertible', name='car_model'), autoincrement=False, nullable=False),
        sa.Column('owner_id', sa.UUID(), autoincrement=False, nullable=False),
        sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
        sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['owner_id'], ['owners.id'], name='cars_owner_id_fkey', ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id', name='cars_pkey')
    )
    # ### end Alembic commands ###
